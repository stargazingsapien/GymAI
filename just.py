{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0cbea526-7bc8-49b6-81be-e917c767a92a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: mediapipe in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (0.10.14)\n",
      "Requirement already satisfied: opencv-python in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (4.10.0.84)\n",
      "Requirement already satisfied: absl-py in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (2.1.0)\n",
      "Requirement already satisfied: attrs>=19.1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (24.2.0)\n",
      "Requirement already satisfied: flatbuffers>=2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (24.3.25)\n",
      "Requirement already satisfied: jax in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (0.4.33)\n",
      "Requirement already satisfied: jaxlib in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (0.4.33)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (3.9.2)\n",
      "Requirement already satisfied: numpy in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (1.26.4)\n",
      "Requirement already satisfied: opencv-contrib-python in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (4.10.0.84)\n",
      "Requirement already satisfied: protobuf<5,>=4.25.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (4.25.5)\n",
      "Requirement already satisfied: sounddevice>=0.4.4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from mediapipe) (0.5.0)\n",
      "Requirement already satisfied: CFFI>=1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from sounddevice>=0.4.4->mediapipe) (1.17.1)\n",
      "Requirement already satisfied: ml-dtypes>=0.2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jax->mediapipe) (0.4.1)\n",
      "Requirement already satisfied: opt-einsum in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jax->mediapipe) (3.4.0)\n",
      "Requirement already satisfied: scipy>=1.10 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jax->mediapipe) (1.13.1)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (1.3.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (4.54.1)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (1.4.7)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (24.1)\n",
      "Requirement already satisfied: pillow>=8 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (10.4.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (3.1.4)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from matplotlib->mediapipe) (2.9.0.post0)\n",
      "Requirement already satisfied: pycparser in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from CFFI>=1.0->sounddevice>=0.4.4->mediapipe) (2.22)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from python-dateutil>=2.7->matplotlib->mediapipe) (1.16.0)\n"
     ]
    }
   ],
   "source": [
    "!pip install mediapipe opencv-python \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "771fa7dd-e5af-4145-aed1-7bcf1f2274dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: jupyter in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (1.1.1)\n",
      "Requirement already satisfied: streamlit in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (1.39.0)\n",
      "Requirement already satisfied: notebook in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (7.2.2)\n",
      "Requirement already satisfied: jupyter-console in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (6.6.3)\n",
      "Requirement already satisfied: nbconvert in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (7.16.4)\n",
      "Requirement already satisfied: ipykernel in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (6.29.5)\n",
      "Requirement already satisfied: ipywidgets in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (8.1.5)\n",
      "Requirement already satisfied: jupyterlab in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter) (4.2.5)\n",
      "Requirement already satisfied: altair<6,>=4.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (5.4.1)\n",
      "Requirement already satisfied: blinker<2,>=1.0.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (1.8.2)\n",
      "Requirement already satisfied: cachetools<6,>=4.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (5.5.0)\n",
      "Requirement already satisfied: click<9,>=7.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (8.1.7)\n",
      "Requirement already satisfied: numpy<3,>=1.20 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (1.26.4)\n",
      "Requirement already satisfied: packaging<25,>=20 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (24.1)\n",
      "Requirement already satisfied: pandas<3,>=1.4.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (2.2.3)\n",
      "Requirement already satisfied: pillow<11,>=7.1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (10.4.0)\n",
      "Requirement already satisfied: protobuf<6,>=3.20 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (4.25.5)\n",
      "Requirement already satisfied: pyarrow>=7.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (17.0.0)\n",
      "Requirement already satisfied: requests<3,>=2.27 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (2.32.3)\n",
      "Requirement already satisfied: rich<14,>=10.14.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (13.9.1)\n",
      "Requirement already satisfied: tenacity<10,>=8.1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (9.0.0)\n",
      "Requirement already satisfied: toml<2,>=0.10.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (0.10.2)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.3.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (4.12.2)\n",
      "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (3.1.43)\n",
      "Requirement already satisfied: pydeck<1,>=0.8.0b4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (0.9.1)\n",
      "Requirement already satisfied: tornado<7,>=6.0.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (6.4.1)\n",
      "Requirement already satisfied: watchdog<6,>=2.1.5 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from streamlit) (5.0.3)\n",
      "Requirement already satisfied: jinja2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n",
      "Requirement already satisfied: jsonschema>=3.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from altair<6,>=4.0->streamlit) (4.23.0)\n",
      "Requirement already satisfied: narwhals>=1.5.2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from altair<6,>=4.0->streamlit) (1.9.1)\n",
      "Requirement already satisfied: colorama in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from click<9,>=7.0->streamlit) (0.4.6)\n",
      "Requirement already satisfied: gitdb<5,>=4.0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.11)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from pandas<3,>=1.4.0->streamlit) (2024.2)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from pandas<3,>=1.4.0->streamlit) (2024.2)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.10)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.2.3)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2024.8.30)\n",
      "Requirement already satisfied: markdown-it-py>=2.2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.18.0)\n",
      "Requirement already satisfied: comm>=0.1.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (0.2.2)\n",
      "Requirement already satisfied: debugpy>=1.6.5 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (1.8.6)\n",
      "Requirement already satisfied: ipython>=7.23.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (8.28.0)\n",
      "Requirement already satisfied: jupyter-client>=6.1.12 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (8.6.3)\n",
      "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (5.7.2)\n",
      "Requirement already satisfied: matplotlib-inline>=0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (0.1.7)\n",
      "Requirement already satisfied: nest-asyncio in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (1.6.0)\n",
      "Requirement already satisfied: psutil in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (6.0.0)\n",
      "Requirement already satisfied: pyzmq>=24 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (26.2.0)\n",
      "Requirement already satisfied: traitlets>=5.4.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipykernel->jupyter) (5.14.3)\n",
      "Requirement already satisfied: widgetsnbextension~=4.0.12 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipywidgets->jupyter) (4.0.13)\n",
      "Requirement already satisfied: jupyterlab-widgets~=3.0.12 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipywidgets->jupyter) (3.0.13)\n",
      "Requirement already satisfied: prompt-toolkit>=3.0.30 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-console->jupyter) (3.0.48)\n",
      "Requirement already satisfied: async-lru>=1.0.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (2.0.4)\n",
      "Requirement already satisfied: httpx>=0.25.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (0.27.2)\n",
      "Requirement already satisfied: jupyter-lsp>=2.0.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (2.2.5)\n",
      "Requirement already satisfied: jupyter-server<3,>=2.4.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (2.14.2)\n",
      "Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (2.27.3)\n",
      "Requirement already satisfied: notebook-shim>=0.2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (0.2.4)\n",
      "Requirement already satisfied: setuptools>=40.1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab->jupyter) (75.1.0)\n",
      "Requirement already satisfied: beautifulsoup4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (4.12.3)\n",
      "Requirement already satisfied: bleach!=5.0.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (6.1.0)\n",
      "Requirement already satisfied: defusedxml in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (0.7.1)\n",
      "Requirement already satisfied: jupyterlab-pygments in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (0.3.0)\n",
      "Requirement already satisfied: markupsafe>=2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (2.1.5)\n",
      "Requirement already satisfied: mistune<4,>=2.0.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (3.0.2)\n",
      "Requirement already satisfied: nbclient>=0.5.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (0.10.0)\n",
      "Requirement already satisfied: nbformat>=5.7 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (5.10.4)\n",
      "Requirement already satisfied: pandocfilters>=1.4.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (1.5.1)\n",
      "Requirement already satisfied: tinycss2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbconvert->jupyter) (1.3.0)\n",
      "Requirement already satisfied: six>=1.9.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from bleach!=5.0.0->nbconvert->jupyter) (1.16.0)\n",
      "Requirement already satisfied: webencodings in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from bleach!=5.0.0->nbconvert->jupyter) (0.5.1)\n",
      "Requirement already satisfied: smmap<6,>=3.0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.1)\n",
      "Requirement already satisfied: anyio in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from httpx>=0.25.0->jupyterlab->jupyter) (4.6.0)\n",
      "Requirement already satisfied: httpcore==1.* in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from httpx>=0.25.0->jupyterlab->jupyter) (1.0.6)\n",
      "Requirement already satisfied: sniffio in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from httpx>=0.25.0->jupyterlab->jupyter) (1.3.1)\n",
      "Requirement already satisfied: h11<0.15,>=0.13 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from httpcore==1.*->httpx>=0.25.0->jupyterlab->jupyter) (0.14.0)\n",
      "Requirement already satisfied: decorator in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipython>=7.23.1->ipykernel->jupyter) (5.1.1)\n",
      "Requirement already satisfied: jedi>=0.16 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipython>=7.23.1->ipykernel->jupyter) (0.19.1)\n",
      "Requirement already satisfied: stack-data in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from ipython>=7.23.1->ipykernel->jupyter) (0.6.3)\n",
      "Requirement already satisfied: attrs>=22.2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (24.2.0)\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.12.1)\n",
      "Requirement already satisfied: referencing>=0.28.4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.35.1)\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.20.0)\n",
      "Requirement already satisfied: platformdirs>=2.5 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter) (4.3.6)\n",
      "Requirement already satisfied: pywin32>=300 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter) (306)\n",
      "Requirement already satisfied: argon2-cffi>=21.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (23.1.0)\n",
      "Requirement already satisfied: jupyter-events>=0.9.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.10.0)\n",
      "Requirement already satisfied: jupyter-server-terminals>=0.4.4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.5.3)\n",
      "Requirement already satisfied: overrides>=5.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (7.7.0)\n",
      "Requirement already satisfied: prometheus-client>=0.9 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.21.0)\n",
      "Requirement already satisfied: pywinpty>=2.0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (2.0.13)\n",
      "Requirement already satisfied: send2trash>=1.8.2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.8.3)\n",
      "Requirement already satisfied: terminado>=0.8.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.18.1)\n",
      "Requirement already satisfied: websocket-client>=1.7 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.8.0)\n",
      "Requirement already satisfied: babel>=2.10 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter) (2.16.0)\n",
      "Requirement already satisfied: json5>=0.9.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter) (0.9.25)\n",
      "Requirement already satisfied: mdurl~=0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n",
      "Requirement already satisfied: fastjsonschema>=2.15 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from nbformat>=5.7->nbconvert->jupyter) (2.20.0)\n",
      "Requirement already satisfied: wcwidth in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from prompt-toolkit>=3.0.30->jupyter-console->jupyter) (0.2.13)\n",
      "Requirement already satisfied: soupsieve>1.2 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from beautifulsoup4->nbconvert->jupyter) (2.6)\n",
      "Requirement already satisfied: argon2-cffi-bindings in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (21.2.0)\n",
      "Requirement already satisfied: parso<0.9.0,>=0.8.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jedi>=0.16->ipython>=7.23.1->ipykernel->jupyter) (0.8.4)\n",
      "Requirement already satisfied: python-json-logger>=2.0.4 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (2.0.7)\n",
      "Requirement already satisfied: pyyaml>=5.3 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (6.0.2)\n",
      "Requirement already satisfied: rfc3339-validator in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.1.4)\n",
      "Requirement already satisfied: rfc3986-validator>=0.1.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (0.1.1)\n",
      "Requirement already satisfied: executing>=1.2.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from stack-data->ipython>=7.23.1->ipykernel->jupyter) (2.1.0)\n",
      "Requirement already satisfied: asttokens>=2.1.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from stack-data->ipython>=7.23.1->ipykernel->jupyter) (2.4.1)\n",
      "Requirement already satisfied: pure-eval in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from stack-data->ipython>=7.23.1->ipykernel->jupyter) (0.2.3)\n",
      "Requirement already satisfied: fqdn in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.5.1)\n",
      "Requirement already satisfied: isoduration in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (20.11.0)\n",
      "Requirement already satisfied: jsonpointer>1.13 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (3.0.0)\n",
      "Requirement already satisfied: uri-template in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.3.0)\n",
      "Requirement already satisfied: webcolors>=24.6.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (24.8.0)\n",
      "Requirement already satisfied: cffi>=1.0.1 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.17.1)\n",
      "Requirement already satisfied: pycparser in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (2.22)\n",
      "Requirement already satisfied: arrow>=0.15.0 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (1.3.0)\n",
      "Requirement already satisfied: types-python-dateutil>=2.8.10 in c:\\users\\parth\\miniconda3\\envs\\gymai\\lib\\site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.9.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter) (2.9.0.20241003)\n"
     ]
    }
   ],
   "source": [
    "!pip install jupyter streamlit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39f91082-77e8-4c9c-9018-1822d468e79e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import  cv2 as cv\n",
    "import mediapipe as mp\n",
    "import numpy as np\n",
    "mp_drawing = mp.solutions.drawing_utils\n",
    "mp_pose = mp.solutions.pose"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1362d075-e455-45ab-ab5c-0e3248ddbb47",
   "metadata": {},
   "outputs": [],
   "source": [
    "# capturing video\n",
    "cap = cv.VideoCapture(0)\n",
    "while cap.isOpened():\n",
    "    ret, frame = cap.read()\n",
    "    cv.imshow(\"Pose and Exercise Detection AI\", frame)\n",
    "    \n",
    "    if cv.waitKey(10) & 0xFF == ord('q'):\n",
    "        break\n",
    "\n",
    "cap.release()\n",
    "cv.destroyAllWindows()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "517a9502-db69-4708-8bdc-9c0697b2913e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def calculate_angle(a,b,c):\n",
    "    a = np.array(a)\n",
    "    b = np.array(b)\n",
    "    c = np.array(c)\n",
    "    radians = np.arctan2(c[1]-b[1], c[0]-b[0]) - np.arctan2(a[1]-b[1], a[0]-b[0])\n",
    "    angle = np.abs(radians*180.0/np.pi)\n",
    "    \n",
    "    if angle >180.0:\n",
    "        angle = 360-angle\n",
    "    return angle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0bb4c0ff-bc45-47d1-9960-597632e258f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "cap = cv.VideoCapture(0)\n",
    "\n",
    "counter = 0;\n",
    "stage = None\n",
    "\n",
    "with mp_pose.Pose( min_detection_confidence =0.5 , min_tracking_confidence = 0.5) as pose:\n",
    "    \n",
    "    while cap.isOpened():\n",
    "        ret, frame = cap.read()\n",
    "        \n",
    "        image = cv.cvtColor(frame ,cv.COLOR_BGR2RGB)\n",
    "        \n",
    "        results = pose.process(image)\n",
    "        \n",
    "        image = cv.cvtColor(image ,cv.COLOR_RGB2BGR)\n",
    "        \n",
    "        #Extracting landmarks\n",
    "\n",
    "        try:\n",
    "            landmarks = results.pose_landmarks.landmark\n",
    "        \n",
    "            shoulder = [landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].x, landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].y]\n",
    "            elbow = [landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].x, landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].y]\n",
    "            wrist = [landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].x, landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].y]\n",
    "        \n",
    "            angle = calculate_angle(shoulder,elbow, wrist)\n",
    "        \n",
    "            cv.putText(image,str(angle),\n",
    "                  tuple(np.multiply(elbow, [640,480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255),2, cv.LINE_AA)\n",
    "\n",
    "            if angle >160:\n",
    "                stage = \"down\"\n",
    "            if angle <30 and stage == \"down\":\n",
    "                stage = \"up\"\n",
    "                counter+=1\n",
    "                print(counter)\n",
    "\n",
    "        except:\n",
    "            pass\n",
    "\n",
    "        cv.rectangle(image, (0,0), (225,73), (245,117,16), -1)\n",
    "\n",
    "        cv.putText(image, 'CNT', (15,12),\n",
    "                  cv.FONT_HERSHEY_SIMPLEX, 0.5, (0,0,0), 1, cv.LINE_AA)\n",
    "\n",
    "        cv.putText(image, str(counter),\n",
    "                  (10,60),\n",
    "                  cv.FONT_HERSHEY_SIMPLEX, 2, (255,255,255), 2, cv.LINE_AA)\n",
    "\n",
    "        cv.putText(image, 'STAGE', (65,12),\n",
    "                  cv.FONT_HERSHEY_SIMPLEX, 0.5, (0,0,0), 1, cv.LINE_AA)\n",
    "\n",
    "        cv.putText(image, stage,\n",
    "                  (60,60),\n",
    "                  cv.FONT_HERSHEY_SIMPLEX, 2, (255,255,255), 2, cv.LINE_AA)\n",
    "\n",
    "        mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_pose.POSE_CONNECTIONS,\n",
    "                                 mp_drawing.DrawingSpec(color=(255, 255, 255), thickness=2, circle_radius=5),\n",
    "                                 mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=3, circle_radius=5))\n",
    "        cv.imshow(\"Pose and Exercise Detection AI\", image)\n",
    "        \n",
    "        if cv.waitKey(10) & 0xFF == ord('q'):\n",
    "            break\n",
    "\n",
    "\n",
    "cap.release()\n",
    "cv.destroyAllWindows()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c7a8ef84-2387-4fcf-ba71-5c7451d9f3b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import cv2 as cv\n",
    "import numpy as np\n",
    "import mediapipe as mp\n",
    "\n",
    "\n",
    "mp_pose = mp.solutions.pose\n",
    "mp_drawing = mp.solutions.drawing_utils\n",
    "\n",
    "\n",
    "def calculate_angle(a, b, c):\n",
    "    a = np.array(a)\n",
    "    b = np.array(b)\n",
    "    c = np.array(c)\n",
    "    radians = np.arctan2(c[1] - b[1], c[0] - b[0]) - np.arctan2(a[1] - b[1], a[0] - b[0])\n",
    "    angle = np.abs(radians * 180.0 / np.pi)\n",
    "    \n",
    "    if angle > 180.0:\n",
    "        angle = 360 - angle\n",
    "    return angle\n",
    "\n",
    "\n",
    "def update_reps_and_curls_and_squats(left_angle, right_angle, left_knee_angle, right_knee_angle, left_hip_angle, right_hip_angle, \n",
    "                                     stage, counter, curl_counter, curl_stage, squat_counter, squat_stage, exercise_type):\n",
    "    \n",
    "    if exercise_type == 'press':\n",
    "        if left_angle > 160 and right_angle > 160:  \n",
    "            stage = \"down\"\n",
    "        if left_angle < 30 and right_angle < 30 and stage == \"down\":\n",
    "            stage = \"up\"\n",
    "            counter += 1\n",
    "\n",
    "    \n",
    "    if exercise_type == 'curl':\n",
    "        if left_angle < 30:  \n",
    "            curl_stage = \"up\"\n",
    "        if left_angle > 140 and curl_stage == \"up\":  \n",
    "            curl_stage = \"down\"\n",
    "            curl_counter += 1\n",
    "\n",
    "    \n",
    "    thr = 165  \n",
    "    if exercise_type == 'squat':\n",
    "        \n",
    "        if (left_knee_angle < thr) and (right_knee_angle < thr) and (left_hip_angle < thr) and (right_hip_angle < thr):\n",
    "            squat_stage = \"down\"\n",
    "        \n",
    "        \n",
    "        if (left_knee_angle > thr) and (right_knee_angle > thr) and (left_hip_angle > thr) and (right_hip_angle > thr) and (squat_stage == 'down'):\n",
    "            squat_stage = 'up'\n",
    "            squat_counter += 1\n",
    "    \n",
    "    return stage, counter, curl_counter, curl_stage, squat_counter, squat_stage\n",
    "\n",
    "\n",
    "cap = cv.VideoCapture(0)\n",
    "counter = 0  \n",
    "curl_counter = 0  \n",
    "squat_counter = 0  \n",
    "stage = None\n",
    "curl_stage = None\n",
    "squat_stage = None\n",
    "exercise_type = None  \n",
    "\n",
    "\n",
    "def display_exercise_options(image):\n",
    "    cv.putText(image, 'Select Exercise: ', (50, 50), cv.FONT_HERSHEY_SIMPLEX, 0.8, (255, 255, 255), 2, cv.LINE_AA)\n",
    "    cv.putText(image, 'Curls [1]  Presses [2]  Squats [3]', (50, 90), cv.FONT_HERSHEY_SIMPLEX, 0.8, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "with mp_pose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5) as pose:\n",
    "    while cap.isOpened():\n",
    "        ret, frame = cap.read()\n",
    "        \n",
    "        image = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n",
    "        results = pose.process(image)\n",
    "        image = cv.cvtColor(image, cv.COLOR_RGB2BGR)\n",
    "\n",
    "        \n",
    "        if exercise_type is None:\n",
    "            display_exercise_options(image)\n",
    "        else:\n",
    "            try:\n",
    "                if results.pose_landmarks:\n",
    "                    landmarks = results.pose_landmarks.landmark\n",
    "                \n",
    "                    \n",
    "                    left_shoulder = [landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].x, landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].y]\n",
    "                    left_elbow = [landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].x, landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].y]\n",
    "                    left_wrist = [landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].x, landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].y]\n",
    "                \n",
    "                    \n",
    "                    right_shoulder = [landmarks[mp_pose.PoseLandmark.RIGHT_SHOULDER.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_SHOULDER.value].y]\n",
    "                    right_elbow = [landmarks[mp_pose.PoseLandmark.RIGHT_ELBOW.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_ELBOW.value].y]\n",
    "                    right_wrist = [landmarks[mp_pose.PoseLandmark.RIGHT_WRIST.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_WRIST.value].y]\n",
    "\n",
    "                    \n",
    "                    left_hip = [landmarks[mp_pose.PoseLandmark.LEFT_HIP.value].x, landmarks[mp_pose.PoseLandmark.LEFT_HIP.value].y]\n",
    "                    left_knee = [landmarks[mp_pose.PoseLandmark.LEFT_KNEE.value].x, landmarks[mp_pose.PoseLandmark.LEFT_KNEE.value].y]\n",
    "                    left_ankle = [landmarks[mp_pose.PoseLandmark.LEFT_ANKLE.value].x, landmarks[mp_pose.PoseLandmark.LEFT_ANKLE.value].y]\n",
    "                    \n",
    "                    \n",
    "                    right_hip = [landmarks[mp_pose.PoseLandmark.RIGHT_HIP.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_HIP.value].y]\n",
    "                    right_knee = [landmarks[mp_pose.PoseLandmark.RIGHT_KNEE.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_KNEE.value].y]\n",
    "                    right_ankle = [landmarks[mp_pose.PoseLandmark.RIGHT_ANKLE.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_ANKLE.value].y]\n",
    "\n",
    "                    \n",
    "                    left_angle = calculate_angle(left_shoulder, left_elbow, left_wrist)\n",
    "                    right_angle = calculate_angle(right_shoulder, right_elbow, right_wrist)\n",
    "\n",
    "                    \n",
    "                    left_knee_angle = calculate_angle(left_hip, left_knee, left_ankle)\n",
    "                    right_knee_angle = calculate_angle(right_hip, right_knee, right_ankle)\n",
    "\n",
    "                   \n",
    "                    left_hip_angle = calculate_angle(left_knee, left_hip, left_ankle)\n",
    "                    right_hip_angle = calculate_angle(right_knee, right_hip, right_ankle)\n",
    "\n",
    "                    \n",
    "                    cv.putText(image, f'Left Arm: {left_angle:.2f}', tuple(np.multiply(left_elbow, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Arm: {right_angle:.2f}', tuple(np.multiply(right_elbow, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Left Knee: {left_knee_angle:.2f}', tuple(np.multiply(left_knee, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Knee: {right_knee_angle:.2f}', tuple(np.multiply(right_knee, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Left Hip: {left_hip_angle:.2f}', tuple(np.multiply(left_hip, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Hip: {right_hip_angle:.2f}', tuple(np.multiply(right_hip, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "                    \n",
    "                    stage, counter, curl_counter, curl_stage, squat_counter, squat_stage = update_reps_and_curls_and_squats(\n",
    "                        left_angle, right_angle, left_knee_angle, right_knee_angle, left_hip_angle, right_hip_angle,\n",
    "                        stage, counter, curl_counter, curl_stage, squat_counter, squat_stage, exercise_type)\n",
    "            \n",
    "            except Exception as e:\n",
    "                print(f\"Error occurred: {e}\")\n",
    "\n",
    "            \n",
    "            cv.rectangle(image, (0, 0), (225, 160), (245, 117, 16), -1)\n",
    "\n",
    "            if exercise_type == 'press':\n",
    "                cv.putText(image, 'PRESSES', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            elif exercise_type == 'curl':\n",
    "                cv.putText(image, 'CURLS', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(curl_counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            elif exercise_type == 'squat':\n",
    "                cv.putText(image, 'SQUATS', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(squat_counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            \n",
    "            mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_pose.POSE_CONNECTIONS,\n",
    "                                     mp_drawing.DrawingSpec(color=(255, 255, 255), thickness=2, circle_radius=5),\n",
    "                                     mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=3, circle_radius=5))\n",
    "\n",
    "        cv.imshow(\"Pose and Exercise Detection AI\", image)\n",
    "\n",
    "       \n",
    "        key = cv.waitKey(1) & 0xFF\n",
    "        if key == ord('1') and exercise_type is None:  \n",
    "            exercise_type = 'curl'\n",
    "        elif key == ord('2') and exercise_type is None:  \n",
    "            exercise_type = 'press'\n",
    "        elif key == ord('3') and exercise_type is None:  \n",
    "            exercise_type = 'squat'\n",
    "\n",
    "        if key == ord('q'):  \n",
    "            break\n",
    "\n",
    "cap.release()\n",
    "cv.destroyAllWindows()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3e3b62c1-b5d9-4c65-9222-aaf59bb592fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter your weight in kilograms: \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 50\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please enter your height in meters: \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " 55\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your BMI is 0.02. You are underweight. A high-calorie diet with healthy fats and proteins is recommended. Include more whole grains, nuts, and avocados.\n",
      "Pitch adjustment not supported when using SAPI5\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\PARTH\\miniconda3\\envs\\gymai\\Lib\\site-packages\\google\\protobuf\\symbol_database.py:55: UserWarning: SymbolDatabase.GetPrototype() is deprecated. Please use message_factory.GetMessageClass() instead. SymbolDatabase.GetPrototype() will be removed soon.\n",
      "  warnings.warn('SymbolDatabase.GetPrototype() is deprecated. Please '\n"
     ]
    }
   ],
   "source": [
    "#final code\n",
    "\n",
    "import cv2 as cv\n",
    "import numpy as np\n",
    "import mediapipe as mp\n",
    "import pyttsx3\n",
    "\n",
    "mp_pose = mp.solutions.pose\n",
    "mp_drawing = mp.solutions.drawing_utils\n",
    "\n",
    "def calculate_angle(a, b, c):\n",
    "    a = np.array(a)\n",
    "    b = np.array(b)\n",
    "    c = np.array(c)\n",
    "    radians = np.arctan2(c[1] - b[1], c[0] - b[0]) - np.arctan2(a[1] - b[1], a[0] - b[0])\n",
    "    angle = np.abs(radians * 180.0 / np.pi)\n",
    "    \n",
    "    if angle > 180.0:\n",
    "        angle = 360 - angle\n",
    "    return angle\n",
    "\n",
    "def update_reps_and_curls_and_squats(left_angle, right_angle, left_knee_angle, right_knee_angle, left_hip_angle, right_hip_angle, \n",
    "                                     stage, counter, curl_counter, curl_stage, squat_counter, squat_stage, exercise_type):\n",
    "    \n",
    "    if exercise_type == 'press':\n",
    "        if left_angle > 160 and right_angle > 160:  \n",
    "            stage = \"down\"\n",
    "        if left_angle < 30 and right_angle < 30 and stage == \"down\":\n",
    "            stage = \"up\"\n",
    "            counter += 1\n",
    "\n",
    "    \n",
    "    if exercise_type == 'curl':\n",
    "        if left_angle < 30:  \n",
    "            curl_stage = \"up\"\n",
    "        if left_angle > 140 and curl_stage == \"up\":  \n",
    "            curl_stage = \"down\"\n",
    "            curl_counter += 1\n",
    "\n",
    "    \n",
    "    thr = 180\n",
    "    if exercise_type == 'squat':\n",
    "        \n",
    "        if (left_knee_angle < thr) and (right_knee_angle < thr) and (left_hip_angle < thr) and (right_hip_angle < thr):\n",
    "            squat_stage = \"down\"\n",
    "        \n",
    "        \n",
    "        if (left_knee_angle > thr) and (right_knee_angle > thr) and (left_hip_angle > thr) and (right_hip_angle > thr) and (squat_stage == 'down'):\n",
    "            squat_stage = 'up'\n",
    "            squat_counter += 1\n",
    "    \n",
    "    return stage, counter, curl_counter, curl_stage, squat_counter, squat_stage\n",
    "\n",
    "\n",
    "def calculate_bmi(weight, height):\n",
    "    bmi = weight / (height ** 2)  \n",
    "    return bmi\n",
    "\n",
    "def get_diet_plan(bmi):\n",
    "    if bmi < 18.5:\n",
    "        diet_plan = \"You are underweight. A high-calorie diet with healthy fats and proteins is recommended. Include more whole grains, nuts, and avocados.\"\n",
    "    elif 18.5 <= bmi < 24.9:\n",
    "        diet_plan = \"You have a normal weight. Maintain a balanced diet with lean proteins, vegetables, fruits, and whole grains.\"\n",
    "    elif 25 <= bmi < 29.9:\n",
    "        diet_plan = \"You are overweight. Consider reducing your calorie intake and focusing on a balanced diet with low fats and sugars.\"\n",
    "    else:\n",
    "        diet_plan = \"You are obese. A weight loss plan with a calorie deficit, increased physical activity, and a nutrient-rich diet is recommended. Consult a healthcare provider for personalized advice.\"\n",
    "    \n",
    "    return diet_plan\n",
    "\n",
    "def speak_text(text):\n",
    "    engine = pyttsx3.init()\n",
    "    engine.setProperty('rate', 150)  \n",
    "    engine.setProperty('volume', 1)  \n",
    "    try:\n",
    "        engine.setProperty('pitch', 50)  \n",
    "    except:\n",
    "        print(\"Pitch adjustment is not supported with the SAPI5 engine.\")\n",
    "    engine.say(text)\n",
    "    engine.runAndWait()\n",
    "\n",
    "cap = cv.VideoCapture(0)\n",
    "counter = 0  \n",
    "curl_counter = 0  \n",
    "squat_counter = 0  \n",
    "stage = None\n",
    "curl_stage = None\n",
    "squat_stage = None\n",
    "exercise_type = None  \n",
    "\n",
    "def display_exercise_options(image):\n",
    "    cv.putText(image, 'Select Exercise: ', (50, 50), cv.FONT_HERSHEY_SIMPLEX, 0.8, (255, 255, 255), 2, cv.LINE_AA)\n",
    "    cv.putText(image, 'Curls [1]  Presses [2]  Squats [3]', (50, 90), cv.FONT_HERSHEY_SIMPLEX, 0.8, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "def get_user_bmi_input():\n",
    "    print(\"Please enter your weight in kilograms: \")\n",
    "    weight = float(input())\n",
    "    print(\"Please enter your height in meters: \")\n",
    "    height = float(input())\n",
    "    bmi = calculate_bmi(weight, height)\n",
    "    diet_plan = get_diet_plan(bmi)\n",
    "    \n",
    "    print(f\"Your BMI is {bmi:.2f}. {diet_plan}\")\n",
    "    \n",
    "    speak_text(f\"Your BMI is {bmi:.2f}. {diet_plan}\")\n",
    "    \n",
    "    return bmi, diet_plan\n",
    "\n",
    "with mp_pose.Pose(min_detection_confidence=0.5, min_tracking_confidence=0.5) as pose:\n",
    "    \n",
    "    bmi, diet_plan = get_user_bmi_input()\n",
    "\n",
    "    while cap.isOpened():\n",
    "        ret, frame = cap.read()\n",
    "        \n",
    "        image = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n",
    "        results = pose.process(image)\n",
    "        image = cv.cvtColor(image, cv.COLOR_RGB2BGR)\n",
    "\n",
    "        if exercise_type is None:\n",
    "            display_exercise_options(image)\n",
    "        else:\n",
    "            try:\n",
    "                if results.pose_landmarks:\n",
    "                    landmarks = results.pose_landmarks.landmark\n",
    "                \n",
    "                    \n",
    "                    left_shoulder = [landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].x, landmarks[mp_pose.PoseLandmark.LEFT_SHOULDER.value].y]\n",
    "                    left_elbow = [landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].x, landmarks[mp_pose.PoseLandmark.LEFT_ELBOW.value].y]\n",
    "                    left_wrist = [landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].x, landmarks[mp_pose.PoseLandmark.LEFT_WRIST.value].y]\n",
    "                \n",
    "                    right_shoulder = [landmarks[mp_pose.PoseLandmark.RIGHT_SHOULDER.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_SHOULDER.value].y]\n",
    "                    right_elbow = [landmarks[mp_pose.PoseLandmark.RIGHT_ELBOW.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_ELBOW.value].y]\n",
    "                    right_wrist = [landmarks[mp_pose.PoseLandmark.RIGHT_WRIST.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_WRIST.value].y]\n",
    "\n",
    "                    left_hip = [landmarks[mp_pose.PoseLandmark.LEFT_HIP.value].x, landmarks[mp_pose.PoseLandmark.LEFT_HIP.value].y]\n",
    "                    left_knee = [landmarks[mp_pose.PoseLandmark.LEFT_KNEE.value].x, landmarks[mp_pose.PoseLandmark.LEFT_KNEE.value].y]\n",
    "                    left_ankle = [landmarks[mp_pose.PoseLandmark.LEFT_ANKLE.value].x, landmarks[mp_pose.PoseLandmark.LEFT_ANKLE.value].y]\n",
    "                    \n",
    "                    right_hip = [landmarks[mp_pose.PoseLandmark.RIGHT_HIP.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_HIP.value].y]\n",
    "                    right_knee = [landmarks[mp_pose.PoseLandmark.RIGHT_KNEE.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_KNEE.value].y]\n",
    "                    right_ankle = [landmarks[mp_pose.PoseLandmark.RIGHT_ANKLE.value].x, landmarks[mp_pose.PoseLandmark.RIGHT_ANKLE.value].y]\n",
    "\n",
    "                    \n",
    "                    left_angle = calculate_angle(left_shoulder, left_elbow, left_wrist)\n",
    "                    right_angle = calculate_angle(right_shoulder, right_elbow, right_wrist)\n",
    "\n",
    "                    left_knee_angle = calculate_angle(left_hip, left_knee, left_ankle)\n",
    "                    right_knee_angle = calculate_angle(right_hip, right_knee, right_ankle)\n",
    "\n",
    "                    left_hip_angle = calculate_angle(left_knee, left_hip, left_ankle)\n",
    "                    right_hip_angle = calculate_angle(right_knee, right_hip, right_ankle)\n",
    "\n",
    "                \n",
    "                    cv.putText(image, f'Left Arm: {left_angle:.2f}', tuple(np.multiply(left_elbow, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Arm: {right_angle:.2f}', tuple(np.multiply(right_elbow, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Left Knee: {left_knee_angle:.2f}', tuple(np.multiply(left_knee, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Knee: {right_knee_angle:.2f}', tuple(np.multiply(right_knee, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Left Hip: {left_hip_angle:.2f}', tuple(np.multiply(left_hip, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "                    cv.putText(image, f'Right Hip: {right_hip_angle:.2f}', tuple(np.multiply(right_hip, [640, 480]).astype(int)), cv.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "                \n",
    "                    stage, counter, curl_counter, curl_stage, squat_counter, squat_stage = update_reps_and_curls_and_squats(\n",
    "                        left_angle, right_angle, left_knee_angle, right_knee_angle, left_hip_angle, right_hip_angle,\n",
    "                        stage, counter, curl_counter, curl_stage, squat_counter, squat_stage, exercise_type)\n",
    "            \n",
    "            except Exception as e:\n",
    "                print(f\"Error occurred: {e}\")\n",
    "\n",
    "            cv.rectangle(image, (0, 0), (225, 160), (245, 117, 16), -1)\n",
    "\n",
    "            if exercise_type == 'press':\n",
    "                cv.putText(image, 'PRESSES', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            elif exercise_type == 'curl':\n",
    "                cv.putText(image, 'CURLS', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(curl_counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            elif exercise_type == 'squat':\n",
    "                cv.putText(image, 'SQUATS', (65, 12), cv.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 0), 1, cv.LINE_AA)\n",
    "                cv.putText(image, str(squat_counter), (60, 60), cv.FONT_HERSHEY_SIMPLEX, 2, (255, 255, 255), 2, cv.LINE_AA)\n",
    "\n",
    "            mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_pose.POSE_CONNECTIONS,\n",
    "                                     mp_drawing.DrawingSpec(color=(255, 255, 255), thickness=2, circle_radius=5),\n",
    "                                     mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=3, circle_radius=5))\n",
    "\n",
    "        \n",
    "        cv.imshow(\"Pose and Exercise Detection AI\", image)\n",
    "\n",
    "        key = cv.waitKey(1) & 0xFF\n",
    "        if key == ord('1') and exercise_type is None:  \n",
    "            exercise_type = 'curl'\n",
    "        elif key == ord('2') and exercise_type is None:  \n",
    "            exercise_type = 'press'\n",
    "        elif key == ord('3') and exercise_type is None:  \n",
    "            exercise_type = 'squat'\n",
    "\n",
    "    \n",
    "        if key == ord('q'):  \n",
    "            break\n",
    "\n",
    "cap.release()\n",
    "cv.destroyAllWindows()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0c46ea3-5d79-4c19-8b3f-c3438e00836f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
